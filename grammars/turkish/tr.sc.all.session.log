
Summary of compiling synthetic case functions for current grammar
Log of warnings and errors                      : tr.txt.case.log (total entry: 1)
Number of elements in the grammar               : 19
Number of elementary functions considered       : 4
POS tags considered for synthetic case          : (V)
Number of second-order case functions generated : 3
Number of paradigmatic functions out of them    : 2

Check the tr.txt.case.log file for potential concerns.
These are not ill-formed,
   but expect unpredictable case performance from them.

Loaded grammar augmented with arules for case
 (NOT saved in its text file).


File: tr.txt.sc.arules created; contains synthetic case rules for tr.txt in the source format,
   for merging with grammar source text or for inspection.

*BEAMP* : NIL
*LAMBDAFLAG* : T
*NF-PARSE* : T
*OOVP* : NIL
*Beamp* = NIL  *Beam-exp* = 0.9

*A-APPLY* T
*B-COMP* T
*B2-COMP* T
*B3-COMP* T
*BX-COMP* T
*BX2-COMP* T
*BX3-COMP* T
*F-COMP* T
*F2-COMP* T
*F3-COMP* T
*FX-COMP* T
*FX2-COMP* T
*FX3-COMP* T
*T-APPLY* T

Input: Ahmet çocuğun uyuduğunu düşünüyor

Number of analyses: 4


Derivation 1
--------------
LEX   (Ahmet) := NP
        : AHMET
LEX   (çocuğun uyuduğunu) := S
        : (SLEEP CHILD)
LEX   (düşünüyor) := (S\NP)\S
        : (LAM S (LAM X ((THINK S) X)))
T     (|çocuğun uyuduğunu|)(|düşünüyor|) := S\NP
        : ((LAM S (LAM X ((THINK S) X))) (SLEEP CHILD))
T     (|Ahmet|)(|çocuğun uyuduğunu| |düşünüyor|) := S
        : (((LAM S (LAM X ((THINK S) X))) (SLEEP CHILD)) AHMET)

Final LF, normal-order evaluated: 

    ((THINK (SLEEP CHILD)) AHMET) =
    (THINK (SLEEP CHILD) AHMET)

Derivation 2
--------------
LEX   (Ahmet) := NP
        : AHMET
_G2_130 (çocuğun uyuduğunu) := (S\NP)/((S\NP)\S)
        : ((LAM LF (LAM P (P LF))) (SLEEP CHILD))
LEX   (düşünüyor) := (S\NP)\S
        : (LAM S (LAM X ((THINK S) X)))
A     (|çocuğun uyuduğunu|)(|düşünüyor|) := S\NP
        : (((LAM LF (LAM P (P LF))) (SLEEP CHILD))
           (LAM S (LAM X ((THINK S) X))))
T     (|Ahmet|)(|çocuğun uyuduğunu| |düşünüyor|) := S
        : ((((LAM LF (LAM P (P LF))) (SLEEP CHILD))
            (LAM S (LAM X ((THINK S) X))))
           AHMET)

Final LF, normal-order evaluated: 

    ((THINK (SLEEP CHILD)) AHMET) =
    (THINK (SLEEP CHILD) AHMET)

Derivation 3
--------------
LEX   (Ahmet) := NP
        : AHMET
LEX   (çocuğun uyuduğunu) := S
        : (SLEEP CHILD)
LEX   (düşünüyor) := (S\NP)\S
        : (LAM S (LAM X ((THINK S) X)))
T     (|çocuğun uyuduğunu|)(|düşünüyor|) := S\NP
        : ((LAM S (LAM X ((THINK S) X))) (SLEEP CHILD))
T     (|Ahmet|)(|çocuğun uyuduğunu| |düşünüyor|) := S
        : (((LAM S (LAM X ((THINK S) X))) (SLEEP CHILD)) AHMET)
_G2_130 (Ahmet çocuğun uyuduğunu düşünüyor) := (S\NP)/((S\NP)\S)
        : ((LAM LF (LAM P (P LF)))
           (((LAM S (LAM X ((THINK S) X))) (SLEEP CHILD)) AHMET))

Final LF, normal-order evaluated: 

    (LAM P (P ((THINK (SLEEP CHILD)) AHMET))) =
    (\ P . P (THINK (SLEEP CHILD) AHMET))

Derivation 4
--------------
LEX   (Ahmet) := NP
        : AHMET
_G2_130 (çocuğun uyuduğunu) := (S\NP)/((S\NP)\S)
        : ((LAM LF (LAM P (P LF))) (SLEEP CHILD))
LEX   (düşünüyor) := (S\NP)\S
        : (LAM S (LAM X ((THINK S) X)))
A     (|çocuğun uyuduğunu|)(|düşünüyor|) := S\NP
        : (((LAM LF (LAM P (P LF))) (SLEEP CHILD))
           (LAM S (LAM X ((THINK S) X))))
T     (|Ahmet|)(|çocuğun uyuduğunu| |düşünüyor|) := S
        : ((((LAM LF (LAM P (P LF))) (SLEEP CHILD))
            (LAM S (LAM X ((THINK S) X))))
           AHMET)
_G2_130 (Ahmet çocuğun uyuduğunu düşünüyor) := (S\NP)/((S\NP)\S)
        : ((LAM LF (LAM P (P LF)))
           ((((LAM LF (LAM P (P LF))) (SLEEP CHILD))
             (LAM S (LAM X ((THINK S) X))))
            AHMET))

Final LF, normal-order evaluated: 

    (LAM P (P ((THINK (SLEEP CHILD)) AHMET))) =
    (\ P . P (THINK (SLEEP CHILD) AHMET))

Input: Ahmet çocuğun uyuduğuna düşünüyor

Number of analyses: 0


Input: kediyi okşa+yan misafir

OOV error: no lex entry for okşa+yan! Exiting without parse.

Number of analyses: 0


Input: kediyi okşa+dığı misafir

OOV error: no lex entry for okşa+dığı! Exiting without parse.

Number of analyses: 0


Input: misafirin okşa+yan kedi

OOV error: no lex entry for okşa+yan! Exiting without parse.

Number of analyses: 0


Input: misafirin okşa+dığı kedi

OOV error: no lex entry for okşa+dığı! Exiting without parse.

Number of analyses: 0


Input: arı sok+an kız

OOV error: no lex entry for sok+an! Exiting without parse.

Number of analyses: 0


Input: arı sok an kız

Number of analyses: 2


Derivation 1
--------------
LEX   (arı sok) := IV
        : (LAM X ((STING X) BEE))
LEX   (an) := (NP/^NP)\^IV
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
T     (|arı sok|)(|an|) := NP/^NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) (LAM X ((STING X) BEE)))
LEX   (kız) := NP
        : GIRL
A     (|arı sok| |an|)(|kız|) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X ((STING X) BEE)))
           GIRL)

Final LF, normal-order evaluated: 

    (LAM X ((AND ((STING X) BEE)) (GIRL X))) =
    (\ X . AND (STING X BEE) (GIRL X))

Derivation 2
--------------
LEX   (arı sok) := IV
        : (LAM X ((STING X) BEE))
LEX   (an) := (NP/^NP)\^IV
        : (LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
T     (|arı sok|)(|an|) := NP/^NP
        : ((LAM P (LAM Q (LAM X ((AND (P X)) (Q X))))) (LAM X ((STING X) BEE)))
LEX   (kız) := NP
        : GIRL
A     (|arı sok| |an|)(|kız|) := NP
        : (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
            (LAM X ((STING X) BEE)))
           GIRL)
_P2_131 (arı sok an kız) := IV/(IV\NP)
        : ((LAM LF (LAM P (P LF)))
           (((LAM P (LAM Q (LAM X ((AND (P X)) (Q X)))))
             (LAM X ((STING X) BEE)))
            GIRL))

Final LF, normal-order evaluated: 

    (LAM P (P (LAM X ((AND ((STING X) BEE)) (GIRL X))))) =
    (\ P . P (\ X . AND (STING X BEE) (GIRL X)))