#!/bin/bash
# brew does not allow sudo anymore-- $SUDO controls that
# cem bozsahin 2022
# check to see if there is already an installation
if [ "$BENCH_HOME" ]; then
  echo "You have a batgram installed at: $BENCH_HOME."
  echo "There is no need to reinstall. Just do 'git pull' at $BENCH_HOME for the latest."
  exit -1
fi
LOG="=======================================================\nTheBench install and set up, `date`\n=======================================================" # installers can be very verbose, accumulate all deeds to report at end
LOGFILE='/tmp/thebench-install.log'
LOG+="\n-thebench command-line resources for install and use:"
LOG+="\n  git=`command -v git`"
if [ ! `command -v git` ]; then
  LOG+="\n-Your system is missing some command-line basics."
  LOG+="\n-Check the top of this log file to find out which one is missing"
  LOG+="\n-Install the missing one in your system before install and use"
  LOG+="\n-thebench install: ABORTED"
else
echo "PLEASE NOTE:"
echo "  IN CASE THE INSTALLER ASKS FOR superuser PASSWORD,"
echo "  It will be ONLY for installing the Common Lisp sbcl and rlwrap THROUGH safe installers"
echo " "
SUDO=sudo
labdir=`pwd`
#check if SBCL and rlwrap need installing-- SBCL is the standard  lisp for cl4py module
#there is a pecking order of packagers, in case you have more than one
packager=
install=install
if [ `command -v dnf` ]; then
	packager=dnf
fi
if [ `command -v yum` ]; then
	  packager=yum   
	  # open library space of yum
	  $SUDO yum $install yum-utils
	  $SUDO yum-config-manager --enable \*
fi
if [ `command -v apt-get` ]; then
	packager=apt-get
	# open library space of apt-get and refresh
	$SUDO add-apt-repository universe
	$SUDO apt-get update
fi
if [ `command -v pacman` ]; then
	packager=pacman
	install='-S'
fi
if [ `command -v brew` ]; then
    	packager=brew
	SUDO=
fi
if [ "$packager" ]; then
	LOG+="\n-You have an installer ($packager) for standard packages"
else
	LOG+="\n-apt-get, dnf, pacman, yum or brew not found. I leave Common Lisp and rlwrap handling to you."
fi
if [ ! `command -v sbcl` ]; then
  if [ "$packager" ]; then
	$SUDO $packager $install sbcl
	LOG+="\n-sbcl is downloaded and installed"
  fi
else
  LOG+="\n-Local sbcl is set for tool use"
fi
locallisp=`command -v sbcl`
if [ `command -v rlwrap` ]; then
	LOG+="\n-Local rlwrap is set for tool use"
else 
  if [ "$packager" ]; then
	LOG+="\n-rlwrap is downloaded and installed"
	$SUDO $packager $install rlwrap
  fi
fi
printf '%s\n' '# stuff added by thebench installer' >> ~/.bashrc
if [ `command -v rlwrap` ]; then
  printf '%s\n' 'export RLWRAP=rlwrap' >> ~/.bashrc
else
  printf '%s\n' 'export RLWRAP=' >> ~/.bashrc
  LOG+='\n-Change the RLWRAP variable in ~/.bashrc if you have rlwrap somewhere'
fi
printf '%s\n%s\n%s\n%s\n' "export BENCH_HOME=$labdir" "export bench=$BENCH_HOME/bin/bench.py" "export PATH=:.:\$BENCH_HOME/bin:\$PATH" >> ~/.bashrc
printf '%s\n' '# end of stuff added by thebench installer' >> ~/.bashrc
printf '%s\n' '# stuff added by thebench installer' >> ~/.bash_profile
printf '%s\n' 'if [ -f ~/.bashrc ]; then source ~/.bashrc; fi' >> ~/.bash_profile
LOG+='\n-Your .bashrc and .bash_profile have been updated for thebench'
LOG+='\n-Just do "git pull" in batgram home for updates from now on.'
LOG+="\n-I wouldnt do updates in standard files of $labdir."
LOG+="\n-They will be overridden by next git pull"
LOG+="\n\n-batgram install: COMPLETED"
fi
LOG+="\n-This log is saved in file $LOGFILE"
LOG+="\n`date`\n======================================================="
echo -e $LOG > $LOGFILE
echo -e $LOG
